@page "/programme/add"
@page "/programme/edit/{Id:int}"
@using ModuleReview.Data.Models
@using ModuleReview.Services
@inject ProgrammeService programmeService
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Programme: @Title</h3>

<EditForm Model="@record" OnValidSubmit="HandleSave">
    <div class="mb-3">
        <label for="CodeInput" class="form-label">Code</label>
        <InputText id="CodeInput" class="form-control" @bind-Value="record.Code" />
    </div>

    <div class="mb-3">
        <label for="TitleInput" class="form-label">Title</label>
        <InputText id="TitleInput" class="form-control" @bind-Value="record.Title" />
    </div>

    <div class="mb-3">
        <label for="CreditsInput" class="form-label">Credits</label>
        <InputNumber id="CreditsInput" class="form-control" @bind-Value="record.Credits" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    protected string Title = "Add Programme";

    Programme record { get; set; } = new Programme();

    protected async override Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Title = "Edit";
            record = programmeService.GetById(Id); // Assuming GetById is async
        }
    }

    public void HandleSave()
    {
        if (record.Id != 0)
        {
            programmeService.Update(record.Id, record.Code, record.Title, record.Credits);
        }
        else
        {
            programmeService.Add(record); // Add new record
        }
        HandleCancel();
    }

    public void HandleCancel()
    {
        NavigationManager.NavigateTo("/programme");
    }
}